openapi: 3.0.3
info:
  title: agency base
  description: This is my API
  version: 1.0.0
paths:
  /agency:
    post:
      operationId: /agency/add
      description: 新增代理
      tags:
        - agency
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agency'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agencyAddResponse'
    patch:
      operationId: /agency/batchUpdate
      description: 批量更新代理
      tags:
        - agency
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agencyBatchUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agencyBatchUpdateResponse'
  /agencyGet:
    post:
      operationId: /agency/get
      description: 取得代理
      tags:
        - agency
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agencyQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agencyGetResponse'
  /agency/pageGet:
    post:
      operationId: /agency/page/get
      description: 取得代理分頁
      tags:
        - agency
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agencyPageRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agencyPageResponse'
  '/agency/{agencyId}':
    patch:
      operationId: /agency/update
      description: 更新代理
      tags:
        - agency
      parameters:
        - in: path
          name: agencyId
          description: agency ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agencyUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agencyUpdateResponse'
  /agencyPlan:
    post:
      operationId: /agencyPlan/add
      description: 新增代理方案
      tags:
        - agencyPlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agencyPlan'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agencyPlanAddResponse'
    patch:
      operationId: /agencyPlan/batchUpdate
      description: 批量更新代理方案
      tags:
        - agencyPlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agencyPlanBatchUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agencyPlanBatchUpdateResponse'
  /agencyPlanGet:
    post:
      operationId: /agencyPlan/get
      description: 取得代理方案
      tags:
        - agencyPlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agencyPlanQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agencyPlanGetResponse'
  '/agencyPlan/{agencyPlanId}':
    patch:
      operationId: /agencyPlan/update
      description: 更新代理方案
      tags:
        - agencyPlan
      parameters:
        - in: path
          name: agencyPlanId
          description: agency plan ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agencyPlanUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agencyPlanUpdateResponse'
  /agencyPlan/byReferralCodeGet:
    post:
      operationId: /agencyPlan/getByReferralCode
      description: 用推薦碼取得代理方案
      tags:
        - agencyPlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agencyPlanGetByReferralCodeRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agencyPlanGetByReferralCodeResponse'
  /agencyWithPlan:
    post:
      operationId: /agencyWithPlan/add
      description: 新增代理同時新增方案
      tags:
        - agencyWithPlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agencyWithPlan'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agencyWithPlanAddResponse'
  /agencyWithPlanGet:
    post:
      operationId: /agencyWithPlan/get
      description: 取得代理同時取得方案
      tags:
        - agencyWithPlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agencyWithPlanQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agencyWithPlanGetResponse'
  /agencyWithPlan/pageGet:
    post:
      operationId: /agencyWithPlan/page/get
      description: 取得代理同時取得方案分頁
      tags:
        - agencyWithPlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agencyWithPlanPageRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agencyWithPlanPageResponse'
  /platformGet:
    post:
      operationId: /platform/get
      description: 取得平台
      tags:
        - platform
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/platform'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/platformGetResponse'
components:
  schemas:
    id:
      type: object
      properties:
        id:
          type: integer
          format: int64
    result:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        requestId:
          type: string
        success:
          type: boolean
    phoneNumber:
      type: object
      title: phoneNumber
      properties:
        countryCode:
          type: integer
          format: int32
        nationalPhoneNumber:
          type: string
    agency:
      type: object
      properties:
        id:
          type: integer
          format: int64
          x-field-extra-annotation: '@com.baomidou.mybatisplus.annotation.TableId(type = com.baomidou.mybatisplus.annotation.IdType.AUTO)'
        name:
          type: string
        countryCode:
          type: integer
        nationalPhoneNumber:
          type: string
        agencyStatus:
          type: integer
          description: '1:active 2:inactive'
        platformId:
          type: integer
          format: int64
        platformName:
          type: string
        registrationMethod:
          type: integer
          description: '1:phone 2:email 3:username'
        createdAt:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    agencyQuery:
      allOf:
        - $ref: '#/components/schemas/agency'
        - type: object
          properties:
            createdAtFrom:
              type: string
              format: date-time
            createdAtTo:
              type: string
              format: date-time
            updatedAtFrom:
              type: string
              format: date-time
            updatedAtTo:
              type: string
              format: date-time
            idIn:
              type: array
              items:
                type: integer
                format: int64
    agencyAddRequest:
      $ref: '#/components/schemas/agency'
    agencyAddResponse:
      allOf:
        - $ref: '#/components/schemas/result'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/id'
    agencyGetRequest:
      $ref: '#/components/schemas/agencyQuery'
    agencyGetResponse:
      allOf:
        - $ref: '#/components/schemas/result'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/agency'
    agencyPageRequest:
      allOf:
        - $ref: '#/components/schemas/agencyQuery'
        - type: object
          properties:
            pageCurrent:
              type: integer
            pageSize:
              type: integer
    agencyPageResponse:
      allOf:
        - $ref: '#/components/schemas/result'
        - type: object
          properties:
            data:
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                size:
                  type: integer
                  format: int64
                current:
                  type: integer
                  format: int64
                pages:
                  type: integer
                  format: int64
                records:
                  type: array
                  items:
                    $ref: '#/components/schemas/agency'
    agencyUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/agency'
        - type: object
          properties:
            query:
              $ref: '#/components/schemas/agencyQuery'
    agencyUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/result'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/agency'
    agencyBatchUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/agency'
        - type: object
          properties:
            query:
              $ref: '#/components/schemas/agencyQuery'
    agencyBatchUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/result'
        - type: object
          properties:
            data:
              type: object
    agencyPlan:
      type: object
      properties:
        id:
          type: integer
          format: int64
          x-field-extra-annotation: '@com.baomidou.mybatisplus.annotation.TableId(type = com.baomidou.mybatisplus.annotation.IdType.AUTO)'
        name:
          type: string
        agencyId:
          type: integer
          format: int64
        agencyName:
          type: string
        cardAssociation:
          type: integer
          description: '1:visa 2:masterCard 3:AmericanExpress 4:JCB 5:unionPay'
        platformId:
          type: integer
          format: int64
        platformName:
          type: string
        registrationMethod:
          type: integer
          description: '1:phone 2:email 3:username'
        discount:
          type: number
          description: in percentage
        referralCode:
          type: string
        planStatus:
          type: integer
          description: '1:active 2:inactive'
        createdAt:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    agencyPlanQuery:
      allOf:
        - $ref: '#/components/schemas/agencyPlan'
        - type: object
          properties:
            createdAtFrom:
              type: string
              format: date-time
            createdAtTo:
              type: string
              format: date-time
            updatedAtFrom:
              type: string
              format: date-time
            updatedAtTo:
              type: string
              format: date-time
            idIn:
              type: array
              items:
                type: integer
                format: int64
    agencyPlanAddRequest:
      $ref: '#/components/schemas/agencyPlan'
    agencyPlanAddResponse:
      allOf:
        - $ref: '#/components/schemas/result'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/id'
    agencyPlanGetRequest:
      $ref: '#/components/schemas/agencyPlanQuery'
    agencyPlanGetResponse:
      allOf:
        - $ref: '#/components/schemas/result'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/agencyPlan'
    agencyPlanGetByReferralCodeRequest:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        referralCode:
          type: string
    agencyPlanGetByReferralCodeResponse:
      allOf:
        - $ref: '#/components/schemas/result'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/agencyPlan'
    agencyPlanUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/agencyPlan'
        - type: object
          properties:
            query:
              $ref: '#/components/schemas/agencyPlanQuery'
    agencyPlanUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/result'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/agencyPlan'
    agencyPlanBatchUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/agencyPlan'
        - type: object
          properties:
            query:
              $ref: '#/components/schemas/agencyPlanQuery'
    agencyPlanBatchUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/result'
        - type: object
          properties:
            data:
              type: object
    agencyWithPlan:
      allOf:
        - $ref: '#/components/schemas/agency'
        - type: object
          properties:
            planId:
              type: integer
              format: int64
            planName:
              type: string
            cardAssociation:
              type: integer
              description: '1:visa 2:masterCard 3:AmericanExpress 4:JCB 5:unionPay'
            discount:
              type: number
              description: in percentage
            referralCode:
              type: string
            planStatus:
              type: integer
              description: '1:active 2:inactive'
    agencyWithPlanQuery:
      allOf:
        - $ref: '#/components/schemas/agencyWithPlan'
        - type: object
          properties:
            createdAtFrom:
              type: string
              format: date-time
            createdAtTo:
              type: string
              format: date-time
            updatedAtFrom:
              type: string
              format: date-time
            updatedAtTo:
              type: string
              format: date-time
            orderByColumn:
              type: string
            orderByDirection:
              type: integer
              description: '1:asc 2:desc'
            strategy:
              type: integer
              description: '1:newest 2:oldest 3:newest active 4:oldest active'
    agencyWithPlanAddRequest:
      $ref: '#/components/schemas/agencyWithPlan'
    agencyWithPlanAddResponse:
      allOf:
        - $ref: '#/components/schemas/result'
        - type: object
          properties:
            data:
              type: object
              properties:
                agencyId:
                  type: integer
                  format: int64
                agencyPlanId:
                  type: integer
                  format: int64
    agencyWithPlanGetRequest:
      $ref: '#/components/schemas/agencyWithPlanQuery'
    agencyWithPlanGetResponse:
      allOf:
        - $ref: '#/components/schemas/result'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/agencyWithPlan'
    agencyWithPlanPageRequest:
      allOf:
        - $ref: '#/components/schemas/agencyWithPlanQuery'
        - type: object
          properties:
            pageCurrent:
              type: integer
            pageSize:
              type: integer
    agencyWithPlanPageResponse:
      allOf:
        - $ref: '#/components/schemas/result'
        - type: object
          properties:
            data:
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                size:
                  type: integer
                  format: int64
                current:
                  type: integer
                  format: int64
                pages:
                  type: integer
                  format: int64
                records:
                  type: array
                  items:
                    $ref: '#/components/schemas/agencyWithPlan'
    platform:
      type: object
      properties:
        id:
          type: integer
          format: int64
          x-field-extra-annotation: '@com.baomidou.mybatisplus.annotation.TableId(type = com.baomidou.mybatisplus.annotation.IdType.AUTO)'
        name:
          type: string
        registrationMethod:
          type: integer
          description: '1:phone 2:email 3:username'
        createdAt:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    platformGetRequest:
      $ref: '#/components/schemas/platform'
    platformGetResponse:
      allOf:
        - $ref: '#/components/schemas/result'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/platform'

